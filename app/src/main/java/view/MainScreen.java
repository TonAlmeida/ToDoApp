package view;

import java.awt.Color;
import java.awt.Font;
import controller.ProjectController;
import controller.TaskController;
import controller.UserController;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.DefaultListModel;
import model.Project;
import java.util.List;
import javax.swing.JOptionPane;
import model.Task;
import model.User;
import util.ButtonColumnCellRenderer;
import util.TaskTableModel;
import util.DeadLineColumCellRenderer;

/**
 *
 * @author ton618
 */
public final class MainScreen extends javax.swing.JFrame {

    ProjectController projectController;
    TaskController taskController;
    
    UserController userController;
    User user;

    //declaring the models associated with the jlists that helps us to fild the jlists
    DefaultListModel projectsModel;
    TaskTableModel tasksTableModel;

    public MainScreen() {
        
        initComponents();

        initControllers();
        initComponentsModel();
        
        //load projects only if the this.user is setted
        if(this.user != null) loadProjects();
        

        DecorateTableTasks();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TasksTableList = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        BackgrowndPanel = new javax.swing.JPanel();
        Title = new javax.swing.JLabel();
        SubTitle = new javax.swing.JLabel();
        ProjectPanel = new javax.swing.JPanel();
        ProjectLabel = new javax.swing.JLabel();
        ProjectAdd = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        TaskPanel = new javax.swing.JPanel();
        TaskLabel = new javax.swing.JLabel();
        TaskAdd = new javax.swing.JLabel();
        ProjectPanelList = new javax.swing.JPanel();
        jList = new javax.swing.JScrollPane();
        ProjectList = new javax.swing.JList<>();
        TaskPanelList = new javax.swing.JPanel();
        EmptyTasksList = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabelWelcomeMessage = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        TasksTableList.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        TasksTableList.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        TasksTableList.setToolTipText("");
        TasksTableList.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        TasksTableList.setDragEnabled(true);
        TasksTableList.setName(""); // NOI18N
        TasksTableList.setRequestFocusEnabled(false);
        TasksTableList.setRowHeight(50);
        TasksTableList.setSelectionBackground(new java.awt.Color(163, 247, 136));
        TasksTableList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        TasksTableList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TasksTableListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TasksTableList);

        jLabel2.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("log off");
        jLabel2.setToolTipText("");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1080, 800));

        BackgrowndPanel.setBackground(new java.awt.Color(255, 255, 255));

        Title.setBackground(new java.awt.Color(255, 255, 255));
        Title.setFont(new java.awt.Font("DejaVu Sans", 1, 36)); // NOI18N
        Title.setForeground(new java.awt.Color(0, 153, 102));
        Title.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/check/check (3).png"))); // NOI18N
        Title.setText(" ToDo App");

        SubTitle.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        SubTitle.setForeground(new java.awt.Color(0, 153, 102));
        SubTitle.setText("Write everyting, don't forget anything");
        SubTitle.setToolTipText("");

        ProjectLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        ProjectLabel.setForeground(new java.awt.Color(0, 153, 102));
        ProjectLabel.setText("Project");

        ProjectAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add/add (4).png"))); // NOI18N
        ProjectAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProjectAddMouseClicked(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete/close (4).png"))); // NOI18N
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout ProjectPanelLayout = new javax.swing.GroupLayout(ProjectPanel);
        ProjectPanel.setLayout(ProjectPanelLayout);
        ProjectPanelLayout.setHorizontalGroup(
            ProjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProjectPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ProjectLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ProjectAdd)
                .addContainerGap())
        );
        ProjectPanelLayout.setVerticalGroup(
            ProjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProjectPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ProjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ProjectLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(ProjectPanelLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(ProjectAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE))
                .addContainerGap())
        );

        TaskLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        TaskLabel.setForeground(new java.awt.Color(0, 153, 102));
        TaskLabel.setText("Task");

        TaskAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add/add (4).png"))); // NOI18N
        TaskAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TaskAddMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout TaskPanelLayout = new javax.swing.GroupLayout(TaskPanel);
        TaskPanel.setLayout(TaskPanelLayout);
        TaskPanelLayout.setHorizontalGroup(
            TaskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TaskPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TaskLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(TaskAdd)
                .addContainerGap())
        );
        TaskPanelLayout.setVerticalGroup(
            TaskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TaskPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TaskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(TaskAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(TaskLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(7, Short.MAX_VALUE))
        );

        ProjectList.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        ProjectList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ProjectList.setFixedCellHeight(50);
        ProjectList.setSelectionBackground(new java.awt.Color(0, 153, 102));
        ProjectList.setSelectionForeground(new java.awt.Color(255, 255, 255));
        ProjectList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProjectListMouseClicked(evt);
            }
        });
        jList.setViewportView(ProjectList);

        javax.swing.GroupLayout ProjectPanelListLayout = new javax.swing.GroupLayout(ProjectPanelList);
        ProjectPanelList.setLayout(ProjectPanelListLayout);
        ProjectPanelListLayout.setHorizontalGroup(
            ProjectPanelListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProjectPanelListLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jList, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(7, Short.MAX_VALUE))
        );
        ProjectPanelListLayout.setVerticalGroup(
            ProjectPanelListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProjectPanelListLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jList)
                .addContainerGap())
        );

        TaskPanelList.setLayout(new java.awt.BorderLayout());

        jLabel3.setBackground(new java.awt.Color(0, 153, 102));
        jLabel3.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 102));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Nada por aqui :)");

        javax.swing.GroupLayout EmptyTasksListLayout = new javax.swing.GroupLayout(EmptyTasksList);
        EmptyTasksList.setLayout(EmptyTasksListLayout);
        EmptyTasksListLayout.setHorizontalGroup(
            EmptyTasksListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EmptyTasksListLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 715, Short.MAX_VALUE)
                .addContainerGap())
        );
        EmptyTasksListLayout.setVerticalGroup(
            EmptyTasksListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EmptyTasksListLayout.createSequentialGroup()
                .addGap(264, 264, 264)
                .addComponent(jLabel3)
                .addContainerGap(314, Short.MAX_VALUE))
        );

        TaskPanelList.add(EmptyTasksList, java.awt.BorderLayout.CENTER);

        jLabelWelcomeMessage.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        jLabelWelcomeMessage.setForeground(new java.awt.Color(0, 153, 153));
        jLabelWelcomeMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelWelcomeMessage.setToolTipText("");
        jLabelWelcomeMessage.setAutoscrolls(true);

        jLabel1.setForeground(new java.awt.Color(0, 153, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("log off");
        jLabel1.setToolTipText("");
        jLabel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout BackgrowndPanelLayout = new javax.swing.GroupLayout(BackgrowndPanel);
        BackgrowndPanel.setLayout(BackgrowndPanelLayout);
        BackgrowndPanelLayout.setHorizontalGroup(
            BackgrowndPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgrowndPanelLayout.createSequentialGroup()
                .addGroup(BackgrowndPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BackgrowndPanelLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(BackgrowndPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ProjectPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ProjectPanelList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(BackgrowndPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TaskPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(TaskPanelList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(BackgrowndPanelLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(BackgrowndPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(SubTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Title, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(BackgrowndPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelWelcomeMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BackgrowndPanelLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)))))
                .addContainerGap())
        );
        BackgrowndPanelLayout.setVerticalGroup(
            BackgrowndPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgrowndPanelLayout.createSequentialGroup()
                .addGroup(BackgrowndPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BackgrowndPanelLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(Title)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SubTitle))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BackgrowndPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelWelcomeMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(BackgrowndPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ProjectPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TaskPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BackgrowndPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ProjectPanelList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(BackgrowndPanelLayout.createSequentialGroup()
                        .addComponent(TaskPanelList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(6, 6, 6)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(BackgrowndPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BackgrowndPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ProjectAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProjectAddMouseClicked
        // creating an instance of the project register screen
        ProjectDialogRegisterScreen newProjectWindow = new ProjectDialogRegisterScreen(this, rootPaneCheckingEnabled);
        newProjectWindow.setUser(user);
        //setting this visible
        newProjectWindow.setVisible(true);

        //updating the list of projects in the mein screen when close the window
        newProjectWindow.addWindowListener(new WindowAdapter() {
            public void windowClosed(WindowEvent e) {
                loadProjects();
            }
        });
    }//GEN-LAST:event_ProjectAddMouseClicked

    private void TaskAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TaskAddMouseClicked

        try {
            //passing the selected project to regist a task
            int index = ProjectList.getSelectedIndex();
            Project project = userController.getAllFromUser(user).get(index);
            
            //creating an instance of the task register screen
            TaskDialogRegisterScreen newTaskWindow = new TaskDialogRegisterScreen(this, rootPaneCheckingEnabled);

            //passing the project to TaskDialogRegisterScreen window
            newTaskWindow.setProject(project);

            //setting this visible
            newTaskWindow.setVisible(true);

            //when close the window
            newTaskWindow.addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosed(WindowEvent e) {
                    selectedProjectFuncion();
                }
            });
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "selecione um projeto ao qual a tarefa deve pertencer!");
        }


    }//GEN-LAST:event_TaskAddMouseClicked

    private void ProjectListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProjectListMouseClicked
        // TODO add your handling code here:
        selectedProjectFuncion();
    }//GEN-LAST:event_ProjectListMouseClicked

    private void TasksTableListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TasksTableListMouseClicked
        // getting row and column that are clicked
        int rowIndex = TasksTableList.rowAtPoint(evt.getPoint());
        int columnIndex = TasksTableList.columnAtPoint(evt.getPoint());

        //getting the task by the clicked row
        Task task = (Task) tasksTableModel.getTasks().get(rowIndex);

        switch (columnIndex) {
            case 3 -> {
                taskController.update(task);
            }
            case 4 -> {
                taskController.delete(task.getId());
                tasksTableModel.getTasks().remove(task);

                selectedProjectFuncion();
            }
            case 5 -> {
                try {
                    //passing the selected project to regist a task
                    Project project = projectController.getProjectFromDB(task.getMyproject());

                    //creating an instance of the task register screen
                    TaskDialogEditScreen taskEdit = new TaskDialogEditScreen(this, rootPaneCheckingEnabled);

                    //passing the project to TaskDialogEditScreen window
                    taskEdit.setProject(project);
                    
                    //passing the task to TaskDialogEditScreen window
                    taskEdit.setTask(task);
                    
                    //filling the inputs of editTask window
                    taskEdit.fillJTextFields();

                    //setting this visible
                    taskEdit.setVisible(true);
                    

                    //when close the window
                    taskEdit.addWindowListener(new WindowAdapter() {
                        @Override
                        public void windowClosed(WindowEvent e) {
                            selectedProjectFuncion();
                        }
                    });
                } catch (Exception e) {
                    throw new RuntimeException("erro ao abrir editor da tarefa "
                            + e.getMessage(), e);
                }
            }
        }
    }//GEN-LAST:event_TasksTableListMouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        LoginScreen login = new LoginScreen();
        login.setVisible(true);
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        try {
            int index = ProjectList.getSelectedIndex();
            Project selectedProject = userController.getAllFromUser(user).get(index);

            List<Task> list = taskController.getAll(selectedProject.getId());

            if (list.isEmpty()) {
                projectController.delete(selectedProject.getId());
                loadProjects();
            } else {
                JOptionPane.showMessageDialog(ProjectPanel, "Este projeto contém tarefas!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(ProjectPanel, "Nenehum projeto selecionado!");
            //throw new RuntimeException(e.getMessage(), e);
        }
    }//GEN-LAST:event_jLabel4MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Java swing".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainScreen().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BackgrowndPanel;
    private javax.swing.JPanel EmptyTasksList;
    private javax.swing.JLabel ProjectAdd;
    private javax.swing.JLabel ProjectLabel;
    private javax.swing.JList<String> ProjectList;
    private javax.swing.JPanel ProjectPanel;
    private javax.swing.JPanel ProjectPanelList;
    private javax.swing.JLabel SubTitle;
    private javax.swing.JLabel TaskAdd;
    private javax.swing.JLabel TaskLabel;
    private javax.swing.JPanel TaskPanel;
    private javax.swing.JPanel TaskPanelList;
    private javax.swing.JTable TasksTableList;
    private javax.swing.JLabel Title;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelWelcomeMessage;
    private javax.swing.JScrollPane jList;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    
    public void DecorateTableTasks() {
        //costumizing the header of the tasks table
        TasksTableList.getTableHeader().setFont(new Font("Segoi UI", Font.BOLD, 18));
        TasksTableList.getTableHeader().setBackground(new Color(0, 155, 102));
        TasksTableList.getTableHeader().setForeground(new Color(255, 255, 255));

        //creating an autosort for the columns of the table
        //TasksTableList.setAutoCreateRowSorter(true);
        TasksTableList.getColumnModel().getColumn(2).setCellRenderer(
                new DeadLineColumCellRenderer());

        TasksTableList.getColumnModel().getColumn(4).setCellRenderer(
                new ButtonColumnCellRenderer("delete"));

        TasksTableList.getColumnModel().getColumn(5).setCellRenderer(
                new ButtonColumnCellRenderer("edit"));
    }

    public void initControllers() {
        projectController = new ProjectController();
        taskController = new TaskController();
        userController = new UserController();
    }

    public void initComponentsModel() {
        projectsModel = new DefaultListModel<>();
        //loadProjects();

        tasksTableModel = new TaskTableModel();
        TasksTableList.setModel(tasksTableModel);

        if (!projectsModel.isEmpty()) {
            loadTasks(0);
        }

    }

    private void showEmptyTasks(boolean hasTasks) {
        if (hasTasks) {
            if (EmptyTasksList.isVisible()) {
                EmptyTasksList.setVisible(false);
                TaskPanelList.remove(EmptyTasksList);
            }
            TaskPanelList.add(jScrollPane1);
            jScrollPane1.setVisible(true);
            jScrollPane1.setSize(TaskPanelList.getWidth(), TaskPanelList.getHeight());
        } else {
            if (jScrollPane1.isVisible()) {
                jScrollPane1.setVisible(false);
                TaskPanelList.remove(jScrollPane1);
            }

            TaskPanelList.add(EmptyTasksList);
            EmptyTasksList.setVisible(true);
            EmptyTasksList.setSize(TaskPanelList.getWidth(), TaskPanelList.getHeight());
        }
    }

    public void loadTasks(int idProject) {
        tasksTableModel.setTasks(null);
        List<Task> tasks = taskController.getAll(idProject);
        tasksTableModel.setTasks(tasks);

        showEmptyTasks(!tasks.isEmpty());

    }

    public void loadProjects() {
        List<Project> projects = userController.getAllFromUser(user);

        projectsModel.clear();

        for (int i = 0; i < projects.size(); i++) {
            Project project = projects.get(i);
            projectsModel.addElement(project.getName());
        }

        ProjectList.setModel(projectsModel);
    }

    public void setUser(User user) {
        this.user = user;
        jLabelWelcomeMessage.setText("Welcome, " + user.getUserName());
        loadProjects();
    }
    
    public void selectedProjectFuncion() {
        int index = ProjectList.getSelectedIndex();
        Project project = userController.getAllFromUser(user).get(index);
        loadTasks(project.getId());
    }
}
